// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`test1.js format 1`] = `
====================================options=====================================
parsers: ["flow"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
/* @flow */

function g() {
  var xx : { p : number } | null = { p : 4 };
  if (xx) {
    return function () {
       /* B : invariant x != undefined needed even if x is not modified elsewhere */
       xx.p = 3;
    }
  }
}

=====================================output=====================================
/* @flow */

function g() {
  var xx: { p: number } | null = { p: 4 };
  if (xx) {
    return function () {
      /* B : invariant x != undefined needed even if x is not modified elsewhere */
      xx.p = 3;
    };
  }
}

================================================================================
`;

exports[`test2.js format 1`] = `
====================================options=====================================
parsers: ["flow"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
// @flow
const x: boolean => (() => number) = b => {
  var val = b ? 0: null;
  if (val == null) {
    return () => 42;
  }
  return () => val; // OK, since val cannot be null
}

=====================================output=====================================
// @flow
const x: (boolean) => () => number = (b) => {
  var val = b ? 0 : null;
  if (val == null) {
    return () => 42;
  }
  return () => val; // OK, since val cannot be null
};

================================================================================
`;

exports[`test3.js format 1`] = `
====================================options=====================================
parsers: ["flow"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
// @flow
const x: (?number) => (() => number) = val => {
  if (val == null) {
    return () => 42;
  }
  return () => val; // OK, since val cannot be null
}

function param_annot(x: ?string): ?(() => string) {
  if (x != null) {
    return () => x;
  }
}

function rest(...x: ?Array<mixed>): ?(() => Array<mixed>) {
  if (x != null) {
    return () => x;
  }
}

=====================================output=====================================
// @flow
const x: (?number) => () => number = (val) => {
  if (val == null) {
    return () => 42;
  }
  return () => val; // OK, since val cannot be null
};

function param_annot(x: ?string): ?() => string {
  if (x != null) {
    return () => x;
  }
}

function rest(...x: ?Array<mixed>): ?() => Array<mixed> {
  if (x != null) {
    return () => x;
  }
}

================================================================================
`;
