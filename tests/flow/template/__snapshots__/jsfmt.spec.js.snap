// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`tagged_template.js format 1`] = `
====================================options=====================================
parsers: ["flow"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
// @flow

let tests = [
  // list of args
  function() {
    function tag(quasis: Array<string>, x: number, y: number) {}
    tag\`foo\${1}bar\${2}\`; // ok
    tag\`foo\${'bad'}bar\${2}\`; // error: string !~> number
  },

  // wrong arity
  function() {
    function tag(quasis: Array<string>, number) {}
    tag\`foo\${1}bar\${2}\`; // error: expected 2 args, got 3
  },

  // rest expr
  function() {
    function tag(quasis: Array<string>, ...exprs: Array<number>) {}
    tag\`foo\${1}\`; // ok
    tag\`foo\${'bad'}\`; // error: string !~> number
  },
]

=====================================output=====================================
// @flow

let tests = [
  // list of args
  function () {
    function tag(quasis: Array<string>, x: number, y: number) {}
    tag\`foo\${1}bar\${2}\`; // ok
    tag\`foo\${"bad"}bar\${2}\`; // error: string !~> number
  },

  // wrong arity
  function () {
    function tag(quasis: Array<string>, number) {}
    tag\`foo\${1}bar\${2}\`; // error: expected 2 args, got 3
  },

  // rest expr
  function () {
    function tag(quasis: Array<string>, ...exprs: Array<number>) {}
    tag\`foo\${1}\`; // ok
    tag\`foo\${"bad"}\`; // error: string !~> number
  },
];

================================================================================
`;

exports[`template.js format 1`] = `
====================================options=====================================
parsers: ["flow"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
/* @flow */

(\`foo\`: string); // ok
(\`bar\`: 'bar'); // ok
(\`baz\`: number); // error

\`foo \${123} bar\`; // ok, number can be appended to string
\`foo \${{bar: 123}} baz\`; // error, object can't be appended

let tests = [
  function(x: string) {
    \`foo \${x}\`; // ok
    \`\${x} bar\`; // ok
    \`foo \${'bar'} \${x}\`; // ok
  },
  function(x: number) {
    \`foo \${x}\`; // ok
    \`\${x} bar\`; // ok
    \`foo \${'bar'} \${x}\`; // ok
  },
  function(x: boolean) {
    \`foo \${x}\`; // error
    \`\${x} bar\`; // error
    \`foo \${'bar'} \${x}\`; // error
  },
  function(x: mixed) {
    \`foo \${x}\`; // error
    \`\${x} bar\`; // error
    \`foo \${'bar'} \${x}\`; // error
  },
];

=====================================output=====================================
/* @flow */

(\`foo\`: string); // ok
(\`bar\`: "bar"); // ok
(\`baz\`: number); // error

\`foo \${123} bar\`; // ok, number can be appended to string
\`foo \${{ bar: 123 }} baz\`; // error, object can't be appended

let tests = [
  function (x: string) {
    \`foo \${x}\`; // ok
    \`\${x} bar\`; // ok
    \`foo \${"bar"} \${x}\`; // ok
  },
  function (x: number) {
    \`foo \${x}\`; // ok
    \`\${x} bar\`; // ok
    \`foo \${"bar"} \${x}\`; // ok
  },
  function (x: boolean) {
    \`foo \${x}\`; // error
    \`\${x} bar\`; // error
    \`foo \${"bar"} \${x}\`; // error
  },
  function (x: mixed) {
    \`foo \${x}\`; // error
    \`\${x} bar\`; // error
    \`foo \${"bar"} \${x}\`; // error
  },
];

================================================================================
`;
