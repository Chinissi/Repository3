// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`basic.js format 1`] = `
====================================options=====================================
parsers: ["flow"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
/**
 * @format
 * @flow
 */

(null: empty); // Error: null ~> empty

=====================================output=====================================
/**
 * @format
 * @flow
 */

(null: empty); // Error: null ~> empty

================================================================================
`;

exports[`code_frame.js format 1`] = `
====================================options=====================================
parsers: ["flow"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
// @flow
({p: 42}: {p: empty});

({p: 42}: {p: empty});

({
  p: 42,
}: {
  p: empty,
});

({p: 42}: {p: empty});

=====================================output=====================================
// @flow
({ p: 42 }: { p: empty });

({ p: 42 }: { p: empty });

({
  p: 42,
}: {
  p: empty,
});

({ p: 42 }: { p: empty });

================================================================================
`;

exports[`code_frame_omit.js format 1`] = `
====================================options=====================================
parsers: ["flow"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
/**
 * @format
 * @flow
 */

{
  const x = 42;
  // empty line
  const y = 42;
  ([x, y]: [empty, empty]);
  // empty line
  // empty line
  // empty line
  // empty line
  // empty line
  ([x, y]: [empty, empty]);
  ([x, y]: [empty, empty]);
}

{
  const x = 42;
  // empty line
  // empty line
  // empty line
  const y = 42;
  ([x, y]: [empty, empty]);
  // empty line
  // empty line
  // empty line
  // empty line
  // empty line
  ([x, y]: [empty, empty]);
  ([x, y]: [empty, empty]);
}

{
  const x = 42;
  // empty line
  // empty line
  // empty line
  // empty line
  const y = 42;
  ([x, y]: [empty, empty]);
  // empty line
  // empty line
  // empty line
  // empty line
  // empty line
  ([x, y]: [empty, empty]);
  ([x, y]: [empty, empty]);
}

=====================================output=====================================
/**
 * @format
 * @flow
 */

{
  const x = 42;
  // empty line
  const y = 42;
  ([x, y]: [empty, empty]);
  // empty line
  // empty line
  // empty line
  // empty line
  // empty line
  ([x, y]: [empty, empty]);
  ([x, y]: [empty, empty]);
}

{
  const x = 42;
  // empty line
  // empty line
  // empty line
  const y = 42;
  ([x, y]: [empty, empty]);
  // empty line
  // empty line
  // empty line
  // empty line
  // empty line
  ([x, y]: [empty, empty]);
  ([x, y]: [empty, empty]);
}

{
  const x = 42;
  // empty line
  // empty line
  // empty line
  // empty line
  const y = 42;
  ([x, y]: [empty, empty]);
  // empty line
  // empty line
  // empty line
  // empty line
  // empty line
  ([x, y]: [empty, empty]);
  ([x, y]: [empty, empty]);
}

================================================================================
`;

exports[`group.js format 1`] = `
====================================options=====================================
parsers: ["flow"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
/**
 * @format
 * @flow
 */

({
  a: 1,
  b: 2,
  c: 3,
}: {
  a: string,
  b: string,
  c: string,
});

=====================================output=====================================
/**
 * @format
 * @flow
 */

({
  a: 1,
  b: 2,
  c: 3,
}: {
  a: string,
  b: string,
  c: string,
});

================================================================================
`;

exports[`large_locs.js format 1`] = `
====================================options=====================================
parsers: ["flow"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
/**
 * @format
 * @flow
 */

(\`some
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
long string\`: empty);

(\`some
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
long string\`: empty);

(\`some
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
long string\`: empty);

=====================================output=====================================
/**
 * @format
 * @flow
 */

(\`some
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
long string\`: empty);

(\`some
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
long string\`: empty);

(\`some
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
really
long string\`: empty);

================================================================================
`;

exports[`layout.js format 1`] = `
====================================options=====================================
parsers: ["flow"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
/**
 * @format
 * @flow
 */

{
  const o = {a: {b: {c: {d: 42}}}};
  ([o.a.b.c.d, o.a.b.c, o.a.b, o.a, o]: [empty, empty, empty, empty, empty]);
  ([o, o.a, o.a.b, o.a.b.c, o.a.b.c.d]: [empty, empty, empty, empty, empty]);
  ([o.a.b.c.d, o, o.a.b.c, o.a, o.a.b]: [empty, empty, empty, empty, empty]);
  ([o, o.a.b.c.d, o.a, o.a.b.c, o.a.b]: [empty, empty, empty, empty, empty]);
  ([o.a.b, o, o.a.b.c, o.a, o.a.b.c.d]: [empty, empty, empty, empty, empty]);
  ([o.a.b, o.a.b.c.d, o.a.b.c, o.a, o]: [empty, empty, empty, empty, empty]);
}

{
  const o = {a: 1, b: 2};
  ([o, o.a, o.b]: [empty, empty, empty]);
  ([o.a, o, o.b]: [empty, empty, empty]);
  ([o.a, o.b, o]: [empty, empty, empty]);
  ([o, o.b, o.a]: [empty, empty, empty]);
  ([o.b, o, o.a]: [empty, empty, empty]);
  ([o.b, o.a, o]: [empty, empty, empty]);
}

=====================================output=====================================
/**
 * @format
 * @flow
 */

{
  const o = { a: { b: { c: { d: 42 } } } };
  ([o.a.b.c.d, o.a.b.c, o.a.b, o.a, o]: [empty, empty, empty, empty, empty]);
  ([o, o.a, o.a.b, o.a.b.c, o.a.b.c.d]: [empty, empty, empty, empty, empty]);
  ([o.a.b.c.d, o, o.a.b.c, o.a, o.a.b]: [empty, empty, empty, empty, empty]);
  ([o, o.a.b.c.d, o.a, o.a.b.c, o.a.b]: [empty, empty, empty, empty, empty]);
  ([o.a.b, o, o.a.b.c, o.a, o.a.b.c.d]: [empty, empty, empty, empty, empty]);
  ([o.a.b, o.a.b.c.d, o.a.b.c, o.a, o]: [empty, empty, empty, empty, empty]);
}

{
  const o = { a: 1, b: 2 };
  ([o, o.a, o.b]: [empty, empty, empty]);
  ([o.a, o, o.b]: [empty, empty, empty]);
  ([o.a, o.b, o]: [empty, empty, empty]);
  ([o, o.b, o.a]: [empty, empty, empty]);
  ([o.b, o, o.a]: [empty, empty, empty]);
  ([o.b, o.a, o]: [empty, empty, empty]);
}

================================================================================
`;

exports[`wrap.js format 1`] = `
====================================options=====================================
parsers: ["flow"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
/**
 * @format
 * @flow
 */

({
  this: {
    is: {
      going: [
        {
          to: {
            be: {
              a: {
                really: [
                  {
                    long: {
                      error: {
                        message: {
                          that: {
                            hopefully: [
                              {breaks: {on: {multiple: {lines: 42}}}},
                            ],
                          },
                        },
                      },
                    },
                  },
                ],
              },
            },
          },
        },
      ],
    },
  },
}: {
  this: {
    is: {
      going: [
        {
          to: {
            be: {
              a: {
                really: [
                  {
                    long: {
                      error: {
                        message: {
                          that: {
                            hopefully: [
                              {breaks: {on: {multiple: {lines: string}}}},
                            ],
                          },
                        },
                      },
                    },
                  },
                ],
              },
            },
          },
        },
      ],
    },
  },
});

=====================================output=====================================
/**
 * @format
 * @flow
 */

({
  this: {
    is: {
      going: [
        {
          to: {
            be: {
              a: {
                really: [
                  {
                    long: {
                      error: {
                        message: {
                          that: {
                            hopefully: [
                              { breaks: { on: { multiple: { lines: 42 } } } },
                            ],
                          },
                        },
                      },
                    },
                  },
                ],
              },
            },
          },
        },
      ],
    },
  },
}: {
  this: {
    is: {
      going: [
        {
          to: {
            be: {
              a: {
                really: [
                  {
                    long: {
                      error: {
                        message: {
                          that: {
                            hopefully: [
                              {
                                breaks: { on: { multiple: { lines: string } } },
                              }
                            ],
                          },
                        },
                      },
                    },
                  }
                ],
              },
            },
          },
        }
      ],
    },
  },
});

================================================================================
`;

exports[`wrap_group.js format 1`] = `
====================================options=====================================
parsers: ["flow"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
/**
 * @format
 * @flow
 */

({
  this: {
    is: {
      going: [
        {
          to: {
            be: {
              a: {
                really: [
                  {
                    long: {
                      error: {
                        message: {
                          that: {
                            hopefully: [
                              {breaks: {on: {multiple: {lines: {a: 1, b: 2}}}}},
                            ],
                          },
                        },
                      },
                    },
                  },
                ],
              },
            },
          },
        },
      ],
    },
  },
}: {
  this: {
    is: {
      going: [
        {
          to: {
            be: {
              a: {
                really: [
                  {
                    long: {
                      error: {
                        message: {
                          that: {
                            hopefully: [
                              {
                                breaks: {
                                  on: {
                                    multiple: {lines: {a: string, b: string}},
                                  },
                                },
                              },
                            ],
                          },
                        },
                      },
                    },
                  },
                ],
              },
            },
          },
        },
      ],
    },
  },
});

=====================================output=====================================
/**
 * @format
 * @flow
 */

({
  this: {
    is: {
      going: [
        {
          to: {
            be: {
              a: {
                really: [
                  {
                    long: {
                      error: {
                        message: {
                          that: {
                            hopefully: [
                              {
                                breaks: {
                                  on: { multiple: { lines: { a: 1, b: 2 } } },
                                },
                              },
                            ],
                          },
                        },
                      },
                    },
                  },
                ],
              },
            },
          },
        },
      ],
    },
  },
}: {
  this: {
    is: {
      going: [
        {
          to: {
            be: {
              a: {
                really: [
                  {
                    long: {
                      error: {
                        message: {
                          that: {
                            hopefully: [
                              {
                                breaks: {
                                  on: {
                                    multiple: {
                                      lines: { a: string, b: string },
                                    },
                                  },
                                },
                              }
                            ],
                          },
                        },
                      },
                    },
                  }
                ],
              },
            },
          },
        }
      ],
    },
  },
});

================================================================================
`;
