// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`a.js format 1`] = `
====================================options=====================================
parsers: ["flow"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
// @flow

export type T<X> = any;
function foo(x: T<string>): T<number> { return x; }
module.exports = 0;

=====================================output=====================================
// @flow

export type T<X> = any;
function foo(x: T<string>): T<number> {
  return x;
}
module.exports = 0;

================================================================================
`;

exports[`b.js format 1`] = `
====================================options=====================================
parsers: ["flow"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
// @flow

export type { T } from './a';
module.exports = require('./a');

=====================================output=====================================
// @flow

export type { T } from "./a";
module.exports = require("./a");

================================================================================
`;

exports[`c.js format 1`] = `
====================================options=====================================
parsers: ["flow"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
// @flow

export type { T } from './a';

=====================================output=====================================
// @flow

export type { T } from "./a";

================================================================================
`;

exports[`d.js format 1`] = `
====================================options=====================================
parsers: ["flow"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
// @flow

import type { T as B } from './b';
import type { T as C } from './c';
function foo(x: B<string>): C<number> { return x; }

=====================================output=====================================
// @flow

import type { T as B } from "./b";
import type { T as C } from "./c";
function foo(x: B<string>): C<number> {
  return x;
}

================================================================================
`;
