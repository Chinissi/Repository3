// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`file1.js format 1`] = `
====================================options=====================================
parsers: ["flow"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
// @flow

// The exported signature should be: (string) => string
function bar(x: string): string { return ""; }
declare function bar(x: number): number; // error: cannot declare

module.exports = bar;

=====================================output=====================================
// @flow

// The exported signature should be: (string) => string
function bar(x: string): string {
  return "";
}
declare function bar(x: number): number; // error: cannot declare

module.exports = bar;

================================================================================
`;

exports[`file2.js format 1`] = `
====================================options=====================================
parsers: ["flow"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
// @flow

// The exported signature should be: (number) => number
declare function foo(x: number): number;
function foo(x: string): string { return ""; }

module.exports = foo;

=====================================output=====================================
// @flow

// The exported signature should be: (number) => number
declare function foo(x: number): number;
function foo(x: string): string {
  return "";
}

module.exports = foo;

================================================================================
`;

exports[`file3.js format 1`] = `
====================================options=====================================
parsers: ["flow"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
// @flow

// The exported signature should be:
// (number) => number & (boolean) => boolean
declare function foo(x: number): number;
function foo(x: string): string { return ""; }
declare function foo(x: boolean): boolean;

module.exports = foo;

=====================================output=====================================
// @flow

// The exported signature should be:
// (number) => number & (boolean) => boolean
declare function foo(x: number): number;
function foo(x: string): string {
  return "";
}
declare function foo(x: boolean): boolean;

module.exports = foo;

================================================================================
`;

exports[`file4.js format 1`] = `
====================================options=====================================
parsers: ["flow"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
// @flow

class A { x: string }

class A { x: number }

module.exports = A;

=====================================output=====================================
// @flow

class A {
  x: string;
}

class A {
  x: number;
}

module.exports = A;

================================================================================
`;

exports[`file5.js format 1`] = `
====================================options=====================================
parsers: ["flow"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
// @flow

var f: number = 1;
function f(): number { return 1; };
module.exports = f;

=====================================output=====================================
// @flow

var f: number = 1;
function f(): number {
  return 1;
}
module.exports = f;

================================================================================
`;

exports[`test.js format 1`] = `
====================================options=====================================
parsers: ["flow"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
// @flow

import f1 from './file1';
(f1(""): string);
(f1(0): number);

import f2 from './file2';
(f2(""): string);
(f2(0): number);

import f3 from './file3';
(f3(""): string);
(f3(0): number);
(f3(true): boolean);

import c from './file4';
((new c).x: string);
((new c).x: number);

import f5 from './file5';
(f5: number);
(f5(): number);

=====================================output=====================================
// @flow

import f1 from "./file1";
(f1(""): string);
(f1(0): number);

import f2 from "./file2";
(f2(""): string);
(f2(0): number);

import f3 from "./file3";
(f3(""): string);
(f3(0): number);
(f3(true): boolean);

import c from "./file4";
(new c().x: string);
(new c().x: number);

import f5 from "./file5";
(f5: number);
(f5(): number);

================================================================================
`;
