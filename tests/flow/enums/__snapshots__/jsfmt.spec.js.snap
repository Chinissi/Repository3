// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`enum-export.js 1`] = `
====================================options=====================================
parsers: ["flow", "babel-flow"]
printWidth: 80
trailingComma: "all"
                                                                                | printWidth
=====================================input======================================
// @flow

export enum A {}

export default enum B {}

=====================================output=====================================
// @flow

export enum A {}

export default enum B {};

================================================================================
`;

exports[`enum-valid-boolean-explicit.js 1`] = `
====================================options=====================================
parsers: ["flow", "babel-flow"]
printWidth: 80
trailingComma: "all"
                                                                                | printWidth
=====================================input======================================
// @flow

enum E of boolean {
  A = true,
  B = false,
}

=====================================output=====================================
// @flow

enum E of boolean {
  A = true,
  B = false,
}

================================================================================
`;

exports[`enum-valid-boolean-implicit.js 1`] = `
====================================options=====================================
parsers: ["flow", "babel-flow"]
printWidth: 80
trailingComma: "all"
                                                                                | printWidth
=====================================input======================================
// @flow

enum E {
  A = true,
  B = false,
}

=====================================output=====================================
// @flow

enum E {
  A = true,
  B = false,
}

================================================================================
`;

exports[`enum-valid-empty.js 1`] = `
====================================options=====================================
parsers: ["flow", "babel-flow"]
printWidth: 80
trailingComma: "all"
                                                                                | printWidth
=====================================input======================================
// @flow

enum E { }

=====================================output=====================================
// @flow

enum E {}

================================================================================
`;

exports[`enum-valid-name.js 1`] = `
====================================options=====================================
parsers: ["flow", "babel-flow"]
printWidth: 80
trailingComma: "all"
                                                                                | printWidth
=====================================input======================================
// @flow

enum type {
}

=====================================output=====================================
// @flow

enum type {}

================================================================================
`;

exports[`enum-valid-no-trailing-comma.js 1`] = `
====================================options=====================================
parsers: ["flow", "babel-flow"]
printWidth: 80
trailingComma: "all"
                                                                                | printWidth
=====================================input======================================
// @flow

enum E {
  A
}

=====================================output=====================================
// @flow

enum E {
  A,
}

================================================================================
`;

exports[`enum-valid-number-explicit.js 1`] = `
====================================options=====================================
parsers: ["flow", "babel-flow"]
printWidth: 80
trailingComma: "all"
                                                                                | printWidth
=====================================input======================================
// @flow

enum E of number {
  A = 1,
  B = 2,
}

=====================================output=====================================
// @flow

enum E of number {
  A = 1,
  B = 2,
}

================================================================================
`;

exports[`enum-valid-number-implicit.js 1`] = `
====================================options=====================================
parsers: ["flow", "babel-flow"]
printWidth: 80
trailingComma: "all"
                                                                                | printWidth
=====================================input======================================
// @flow

enum E {
  A = 0,
  B = 1,
}

=====================================output=====================================
// @flow

enum E {
  A = 0,
  B = 1,
}

================================================================================
`;

exports[`enum-valid-string-explicit-defaulted.js 1`] = `
====================================options=====================================
parsers: ["flow", "babel-flow"]
printWidth: 80
trailingComma: "all"
                                                                                | printWidth
=====================================input======================================
// @flow

enum E of string {
  A,
  B,
}

=====================================output=====================================
// @flow

enum E of string {
  A,
  B,
}

================================================================================
`;

exports[`enum-valid-string-explicit-initialized.js 1`] = `
====================================options=====================================
parsers: ["flow", "babel-flow"]
printWidth: 80
trailingComma: "all"
                                                                                | printWidth
=====================================input======================================
// @flow

enum E of string {
  A = "a",
  B = "b",
}

=====================================output=====================================
// @flow

enum E of string {
  A = "a",
  B = "b",
}

================================================================================
`;

exports[`enum-valid-string-implicit-defaulted.js 1`] = `
====================================options=====================================
parsers: ["flow", "babel-flow"]
printWidth: 80
trailingComma: "all"
                                                                                | printWidth
=====================================input======================================
// @flow

enum E {
  A,
  B,
}

=====================================output=====================================
// @flow

enum E {
  A,
  B,
}

================================================================================
`;

exports[`enum-valid-string-implicit-initialized.js 1`] = `
====================================options=====================================
parsers: ["flow", "babel-flow"]
printWidth: 80
trailingComma: "all"
                                                                                | printWidth
=====================================input======================================
// @flow

enum E {
  A = "a",
  B = "b",
}

=====================================output=====================================
// @flow

enum E {
  A = "a",
  B = "b",
}

================================================================================
`;

exports[`enum-valid-symbol.js 1`] = `
====================================options=====================================
parsers: ["flow", "babel-flow"]
printWidth: 80
trailingComma: "all"
                                                                                | printWidth
=====================================input======================================
// @flow

enum E of symbol {
  A,
  B,
}

=====================================output=====================================
// @flow

enum E of symbol {
  A,
  B,
}

================================================================================
`;
