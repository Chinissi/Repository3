// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`empty.js 1`] = `
====================================options=====================================
parsers: ["flow", "typescript"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
const a = someVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeLong.Expression || [];
const b = someVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeLong.Expression || {};

=====================================output=====================================
const a =
  someVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeLong.Expression || [];
const b =
  someVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeLong.Expression || {};

================================================================================
`;

exports[`last.js 1`] = `
====================================options=====================================
parsers: ["flow", "typescript"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
[,];
[,,];
[,,1,];
[,,1,1];

=====================================output=====================================
[,];
[, ,];
[, , 1];
[, , 1, 1];

================================================================================
`;

exports[`nested.js 1`] = `
====================================options=====================================
parsers: ["flow", "typescript"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
[[]];
[[], []];
[[], [], []];
[[], [0], []];
[[], [0], [0]];
[[], [0, 1], [0]];
[[], [0, 1], [0, 1]];
[[0]];
[[0], []];
[[0], [], []];
[[0], [0], []];
[[0], [0], [0]];
[[0], [0, 1], [0]];
[[0], [0, 1], [0, 1]];
[[0, 1]];
[[0, 1], []];
[[0, 1], [], []];
[[0, 1], [0], []];
[[0, 1], [0], [0]];
[[0, 1], [0, 1], [0]];
[[0, 1], [0, 1], [0, 1]];
[[], [1, 2, 3]];
[[1], [1]];
[[1, 2], [1, 2, 3]];
[[1, 0], [1, 0]];

=====================================output=====================================
[[]];
[[], []];
[[], [], []];
[[], [0], []];
[[], [0], [0]];
[[], [0, 1], [0]];
[
  [],
  [0, 1],
  [0, 1]
];
[[0]];
[[0], []];
[[0], [], []];
[[0], [0], []];
[[0], [0], [0]];
[[0], [0, 1], [0]];
[
  [0],
  [0, 1],
  [0, 1]
];
[[0, 1]];
[[0, 1], []];
[[0, 1], [], []];
[[0, 1], [0], []];
[[0, 1], [0], [0]];
[
  [0, 1],
  [0, 1],
  [0]
];
[
  [0, 1],
  [0, 1],
  [0, 1]
];
[[], [1, 2, 3]];
[[1], [1]];
[
  [1, 2],
  [1, 2, 3]
];
[
  [1, 0],
  [1, 0]
];

================================================================================
`;

exports[`preserve_empty_lines.js 1`] = `
====================================options=====================================
parsers: ["flow", "typescript"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
a = [

  1,
  2,

  3,


  4,


]

=====================================output=====================================
a = [1, 2, 3, 4];

================================================================================
`;
