exports[`test A.js 1`] = `
"// @flow

class A<T> {
  x: T
}

module.exports = A;
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/src/printer.js:1497
        fromString(\", \").join(path.map(print, \"params\")),
                         ^

TypeError: fromString(...).join is not a function
    at genericPrintNoParens (/src/printer.js:1497:26)
    at genericPrint (/src/printer.js:166:7)
    at p (/src/printer.js:111:37)
    at exports.printComments (/src/comments.js:327:20)
    at printGenerically (/src/printer.js:111:12)
    at FastPath.call (/src/fast-path.js:113:16)
    at genericPrintNoParens (/src/printer.js:1172:16)
    at genericPrint (/src/printer.js:166:7)
    at p (/src/printer.js:111:37)
    at exports.printComments (/src/comments.js:327:20)
"
`;

exports[`test B.js 1`] = `
"// @flow

let A = require(\'./A\');

class B extends A<string> {
  constructor() {
    super();
  }
}

module.exports = new B();
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/src/printer.js:1497
        fromString(\", \").join(path.map(print, \"params\")),
                         ^

TypeError: fromString(...).join is not a function
    at genericPrintNoParens (/src/printer.js:1497:26)
    at genericPrint (/src/printer.js:166:7)
    at p (/src/printer.js:111:37)
    at exports.printComments (/src/comments.js:327:20)
    at printGenerically (/src/printer.js:111:12)
    at FastPath.call (/src/fast-path.js:113:16)
    at genericPrintNoParens (/src/printer.js:1180:16)
    at genericPrint (/src/printer.js:166:7)
    at p (/src/printer.js:111:37)
    at exports.printComments (/src/comments.js:327:20)
"
`;

exports[`test C.js 1`] = `
"// @flow

// This test exports a function whose return type is the class\'s \`this\` type.
// It should be inferred (no annotation required).

class Foo {
  foo(): this {
    return this;
  }
}

export function f(x: Foo) {
  return x.foo();
}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
// @flow
// This test exports a function whose return type is the class\'s \`this\` type.
// It should be inferred (no annotation required).
class Foo {
  foo(): this {
    return this;
  }
}
export function f(x: Foo) {
  return x.foo();
}

"
`;
