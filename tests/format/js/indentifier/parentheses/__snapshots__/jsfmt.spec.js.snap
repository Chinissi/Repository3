// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`let-in-assignment.js - {"semi":false} format 1`] = `
====================================options=====================================
parsers: ["babel", "typescript"]
printWidth: 80
semi: false
                                                                                | printWidth
=====================================input======================================
let.a = 1;

foo = [];
(let[a] = 1);

foo = [];
(let[a].b.c.e = 1);

foo = [];
foo[let[a]] = 1;

foo = [];
(let)[let[a]] = 1;

foo = [];
(let[a] ??= 1);

foo = let[a];

foo = [];
let()[a] = 1;

foo = [];
foo(let)[a] = 1;

foo = [];
foo(let[a])[a] = 1;

foo = [];
(let[0] = 1);

foo = [];
(let["a"] = 1);

=====================================output=====================================
let.a = 1

foo = []
;(let)[a] = 1

foo = []
;(let)[a].b.c.e = 1

foo = []
foo[let[a]] = 1

foo = []
;(let)[let[a]] = 1

foo = []
;(let)[a] ??= 1

foo = let[a]

foo = []
let()[a] = 1

foo = []
foo(let)[a] = 1

foo = []
foo(let[a])[a] = 1

foo = []
;(let)[0] = 1

foo = []
;(let)["a"] = 1

================================================================================
`;

exports[`let-in-assignment.js format 1`] = `
====================================options=====================================
parsers: ["babel", "typescript"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
let.a = 1;

foo = [];
(let[a] = 1);

foo = [];
(let[a].b.c.e = 1);

foo = [];
foo[let[a]] = 1;

foo = [];
(let)[let[a]] = 1;

foo = [];
(let[a] ??= 1);

foo = let[a];

foo = [];
let()[a] = 1;

foo = [];
foo(let)[a] = 1;

foo = [];
foo(let[a])[a] = 1;

foo = [];
(let[0] = 1);

foo = [];
(let["a"] = 1);

=====================================output=====================================
let.a = 1;

foo = [];
(let)[a] = 1;

foo = [];
(let)[a].b.c.e = 1;

foo = [];
foo[let[a]] = 1;

foo = [];
(let)[let[a]] = 1;

foo = [];
(let)[a] ??= 1;

foo = let[a];

foo = [];
let()[a] = 1;

foo = [];
foo(let)[a] = 1;

foo = [];
foo(let[a])[a] = 1;

foo = [];
(let)[0] = 1;

foo = [];
(let)["a"] = 1;

================================================================================
`;
