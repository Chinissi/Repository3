// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`class-expression.js [acorn] format 1`] = `
"Unexpected character '@' (1:13)
> 1 | const a1 = (@deco class Foo {});
    |             ^
  2 | const a2 = (@deco class {});
  3 |
  4 | (@deco class Foo {});"
`;

exports[`class-expression.js [espree] format 1`] = `
"Unexpected character '@' (1:13)
> 1 | const a1 = (@deco class Foo {});
    |             ^
  2 | const a2 = (@deco class {});
  3 |
  4 | (@deco class Foo {});"
`;

exports[`class-expression.js [flow] format 1`] = `
"Unexpected token \`@\` (1:13)
> 1 | const a1 = (@deco class Foo {});
    |             ^
  2 | const a2 = (@deco class {});
  3 |
  4 | (@deco class Foo {});"
`;

exports[`class-expression.js [typescript] format 1`] = `
"Expression expected. (1:13)
> 1 | const a1 = (@deco class Foo {});
    |             ^
  2 | const a2 = (@deco class {});
  3 |
  4 | (@deco class Foo {});"
`;

exports[`class-expression.js - {"semi":false} [acorn] format 1`] = `
"Unexpected character '@' (1:13)
> 1 | const a1 = (@deco class Foo {});
    |             ^
  2 | const a2 = (@deco class {});
  3 |
  4 | (@deco class Foo {});"
`;

exports[`class-expression.js - {"semi":false} [espree] format 1`] = `
"Unexpected character '@' (1:13)
> 1 | const a1 = (@deco class Foo {});
    |             ^
  2 | const a2 = (@deco class {});
  3 |
  4 | (@deco class Foo {});"
`;

exports[`class-expression.js - {"semi":false} [flow] format 1`] = `
"Unexpected token \`@\` (1:13)
> 1 | const a1 = (@deco class Foo {});
    |             ^
  2 | const a2 = (@deco class {});
  3 |
  4 | (@deco class Foo {});"
`;

exports[`class-expression.js - {"semi":false} [typescript] format 1`] = `
"Expression expected. (1:13)
> 1 | const a1 = (@deco class Foo {});
    |             ^
  2 | const a2 = (@deco class {});
  3 |
  4 | (@deco class Foo {});"
`;

exports[`class-expression.js - {"semi":false} format 1`] = `
====================================options=====================================
parsers: ["babel", "flow", "typescript"]
printWidth: 80
semi: false
                                                                                | printWidth
=====================================input======================================
const a1 = (@deco class Foo {});
const a2 = (@deco class {});

(@deco class Foo {});
(@deco class {});

const b1 = []
;(@deco class Foo {})

const b2 = []
;(@deco class {})

=====================================output=====================================
const a1 =
  @deco
  class Foo {}
const a2 =
  @deco
  class {}

;@deco
class Foo {}
;@deco
class {}

const b1 = []
;@deco
class Foo {}

const b2 = []
;@deco
class {}

================================================================================
`;

exports[`class-expression.js format 1`] = `
====================================options=====================================
parsers: ["babel", "flow", "typescript"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
const a1 = (@deco class Foo {});
const a2 = (@deco class {});

(@deco class Foo {});
(@deco class {});

const b1 = []
;(@deco class Foo {})

const b2 = []
;(@deco class {})

=====================================output=====================================
const a1 =
  @deco
  class Foo {};
const a2 =
  @deco
  class {};

@deco
class Foo {};
@deco
class {};

const b1 = [];
@deco
class Foo {};

const b2 = [];
@deco
class {};

================================================================================
`;
