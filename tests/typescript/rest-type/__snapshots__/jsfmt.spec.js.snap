// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`complex.ts format 1`] = `
====================================options=====================================
parsers: ["typescript"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
type TupleWithRest = [number, ...(1 extends 2 ? string[] : number[])];

=====================================output=====================================
type TupleWithRest = [number, ...(1 extends 2 ? string[] : number[])];

================================================================================
`;

exports[`infer-type.ts format 1`] = `
====================================options=====================================
parsers: ["typescript"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
type Tail<T extends any[]> = T extends [infer U, ...infer R] ? R : never;

type ReduceNextElement<
  T extends readonly unknown[]
> = T extends readonly [infer V, ...infer R] ? [V, R] : never

=====================================output=====================================
type Tail<T extends any[]> = T extends [infer U, ...infer R] ? R : never;

type ReduceNextElement<T extends readonly unknown[]> = T extends readonly [
  infer V,
  ...infer R
]
  ? [V, R]
  : never;

================================================================================
`;

exports[`simple.ts format 1`] = `
====================================options=====================================
parsers: ["typescript"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
type X = [...number[]];

=====================================output=====================================
type X = [...number[]];

================================================================================
`;
