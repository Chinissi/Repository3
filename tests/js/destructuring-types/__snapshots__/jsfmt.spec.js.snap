// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`prop-types.js [espree] format 1`] = `
"Unexpected token : (2:26)
  1 | // destructured props type all on one line (small enough for one line):
> 2 | const Component1 = (props: { first: String }) => abc()
    |                          ^
  3 | 
  4 | // multi-line destructured props type, small enough for one line:
  5 | const Component2 = (props: {"
`;

exports[`prop-types.js [meriyah] format 1`] = `
"[2:26]: Expected ')' (2:26)
  1 | // destructured props type all on one line (small enough for one line):
> 2 | const Component1 = (props: { first: String }) => abc()
    |                          ^
  3 | 
  4 | // multi-line destructured props type, small enough for one line:
  5 | const Component2 = (props: {"
`;

exports[`prop-types.js format 1`] = `
====================================options=====================================
parsers: ["babel", "babel-flow", "flow"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
// destructured props type all on one line (small enough for one line):
const Component1 = (props: { first: String }) => abc()

// multi-line destructured props type, small enough for one line:
const Component2 = (props: {
  first: String
}) => abc()

// multi-line destructured props type - not small enough for one line:
const Component3 = (props: {
  firstProperty: String,
  secondProperty: String,
  thirdProperty: String
}) => abc()

=====================================output=====================================
// destructured props type all on one line (small enough for one line):
const Component1 = (props: { first: String }) => abc();

// multi-line destructured props type, small enough for one line:
const Component2 = (props: { first: String }) => abc();

// multi-line destructured props type - not small enough for one line:
const Component3 = (props: {
  firstProperty: String,
  secondProperty: String,
  thirdProperty: String,
}) => abc();

================================================================================
`;

exports[`prop-types.js format 2`] = `
====================================options=====================================
parsers: ["babel-ts", "typescript"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
// destructured props type all on one line (small enough for one line):
const Component1 = (props: { first: String }) => abc()

// multi-line destructured props type, small enough for one line:
const Component2 = (props: {
  first: String
}) => abc()

// multi-line destructured props type - not small enough for one line:
const Component3 = (props: {
  firstProperty: String,
  secondProperty: String,
  thirdProperty: String
}) => abc()

=====================================output=====================================
// destructured props type all on one line (small enough for one line):
const Component1 = (props: { first: String }) => abc();

// multi-line destructured props type, small enough for one line:
const Component2 = (props: { first: String }) => abc();

// multi-line destructured props type - not small enough for one line:
const Component3 = (props: {
  firstProperty: String;
  secondProperty: String;
  thirdProperty: String;
}) => abc();

================================================================================
`;
