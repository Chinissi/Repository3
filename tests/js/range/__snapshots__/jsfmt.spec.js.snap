// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`class-declaration.js format 1`] = `
====================================options=====================================
parsers: ["babel", "flow", "typescript"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
  1 | 
  2 | 
> 3 | class    a {
    |         ^^^^
> 4 |   b(   ) {}
    | ^^^^^^^^^^^^
  5 | }
  6 | 
  7 | let    x
=====================================output=====================================


class a {
  b() {}
}

let    x
================================================================================
`;

exports[`different-levels.js format 1`] = `
====================================options=====================================
parsers: ["babel", "flow", "typescript"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
  1 | call(1,2,3)
> 2 | call(1,2,3)
    |        ^^^^
> 3 | function f() {
    | ^^^^^^^^^^^^^^
> 4 |   call(1,2,3)
    | ^^^^^^^^^^
  5 | }
  6 | 
=====================================output=====================================
call(1,2,3)
call(1, 2, 3);
function f() {
  call(1, 2, 3);
}

================================================================================
`;

exports[`function-declaration.js format 1`] = `
====================================options=====================================
parsers: ["babel", "flow", "typescript"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
> 1 | function ugly ( {a=1,     b     =   2     }      ) {}
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  2 | 
=====================================output=====================================
function ugly({ a = 1, b = 2 }) {}

================================================================================
`;

exports[`ignore-indentation.js format 1`] = `
====================================options=====================================
parsers: ["babel", "flow", "typescript"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
  3 |     function ugly ( {a=1,     b     =   2     }      ) {
  4 |   	  	     \`multiline template string
> 5 |               with too much indentation\`
    |                    ^^^
  6 |     }
  7 |   }
  8 | }
=====================================output=====================================
function ugly ( {a=1,     b     =   2     }      ) {
  function ugly ( {a=1,     b     =   2     }      ) {
    function ugly ( {a=1,     b     =   2     }      ) {
  	  	     \`multiline template string
              with too much indentation\`;
    }
  }
}

================================================================================
`;

exports[`large-dict.js format 1`] = `
====================================options=====================================
parsers: ["babel", "flow", "typescript"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
  2 |   const dictWithSeveralEntries = {
  3 |     key:          "value",
> 4 |     anotherKey:   "another value",
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 5 |     firstNumber:  1,
    | ^^^^^^^^^^^^^^^^^^^^
> 6 |     secondNumber: 2
    | ^^^^^^^^^^^^^^^^^^^^
  7 |   };
  8 | }
  9 | 
=====================================output=====================================
function ugly() {
  const dictWithSeveralEntries = {
    key: "value",
    anotherKey: "another value",
    firstNumber: 1,
    secondNumber: 2,
  };
}

================================================================================
`;

exports[`module-export1.js format 1`] = `
====================================options=====================================
parsers: ["babel", "flow", "typescript"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
  1 | import  def , {named}  from    'x'
  2 | 
> 3 | export *  from   'd'
    |          ^^^^^^^^^^^
  4 | 
  5 | export    const  x
  6 |   =  42
=====================================output=====================================
import  def , {named}  from    'x'

export * from "d";

export    const  x
  =  42

export   default    42


================================================================================
`;

exports[`module-export2.js format 1`] = `
====================================options=====================================
parsers: ["babel", "flow", "typescript"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
  2 | 
  3 | export *  from   'd'
> 4 | 
    | ^
> 5 | export    const  x
    | ^^^^^^^^^^^^^^^^^^
> 6 |   =  42
    | ^^^
  7 | 
  8 | export   default    42
  9 | 
=====================================output=====================================
import  def , {named}  from    'x'

export *  from   'd'

export const x = 42;

export   default    42


================================================================================
`;

exports[`module-export3.js format 1`] = `
====================================options=====================================
parsers: ["babel", "flow", "typescript"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
   6 |   =  42
   7 | 
>  8 | export   default    42
     |                   ^^^^
   9 | 
  10 | 
=====================================output=====================================
import  def , {named}  from    'x'

export *  from   'd'

export    const  x
  =  42

export default 42;


================================================================================
`;

exports[`module-import.js format 1`] = `
====================================options=====================================
parsers: ["babel", "flow", "typescript"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
> 1 | import  def , {named}  from    'x'
    |        ^^^^^^^^^^^^^^^
  2 | 
  3 | export *  from   'd'
  4 | 
=====================================output=====================================
import def, { named } from "x";

export *  from   'd'

export    const  x
  =  42

export   default    42


================================================================================
`;

exports[`multiple-statements.js format 1`] = `
====================================options=====================================
parsers: ["babel", "flow", "typescript"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
   4 | 
   5 | call(
>  6 |   1, 2,3
     |      ^^^
>  7 | );
     | ^^
>  8 | 
     | ^^
>  9 | call(
     | ^^
> 10 |   1, 2,3
     | ^^^^^^
  11 | );
  12 | 
  13 | call(
=====================================output=====================================
call(
  1, 2,3
);

call(1, 2, 3);

call(1, 2, 3);

call(
  1, 2,3
);

================================================================================
`;

exports[`multiple-statements2.js format 1`] = `
====================================options=====================================
parsers: ["babel", "flow", "typescript"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
   2 |   1, 2,3
   3 | );
>  4 | 
     | ^
>  5 | call(
     | ^^^^^
>  6 |   1, 2,3
     | ^^^^^
>  7 | );
     | ^^^^^
>  8 | 
     | ^^^^^
>  9 | call(
     | ^^^^^
> 10 |   1, 2,3
     | ^^^^^
> 11 | );
     | ^^^^^
> 12 | 
     | ^
  13 | call(
  14 |   1, 2,3
  15 | );
=====================================output=====================================
call(
  1, 2,3
);

call(1, 2, 3);

call(1, 2, 3);

call(
  1, 2,3
);

================================================================================
`;

exports[`nested.js format 1`] = `
====================================options=====================================
parsers: ["babel", "flow", "typescript"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
> 1 | try {
    | ^^^^^
> 2 |   if (condition) {
    | ^^^^^^^^^^^^^^^^^^
> 3 |     body
    | ^^^^^^^^^^^^^^^^^^
> 4 |   }
    | ^^^^
  5 | }
  6 | catch (err) {}
  7 | 
=====================================output=====================================
try {
  if (condition) {
    body;
  }
} catch (err) {}

================================================================================
`;

exports[`nested-print-width.js format 1`] = `
====================================options=====================================
parsers: ["babel", "flow", "typescript"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
  1 | function f() {
> 2 |   if (true) {
    |              ^
> 3 |     call("this line is 79 chars", "long", "it should", "stay as single line");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 4 |   }
    | ^^^
  5 | }
  6 | 
=====================================output=====================================
function f() {
  if (true) {
    call("this line is 79 chars", "long", "it should", "stay as single line");
  }
}

================================================================================
`;

exports[`nested2.js format 1`] = `
====================================options=====================================
parsers: ["babel", "flow", "typescript"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
  1 | try {
> 2 |   if (condition) {
    |    ^^^^^^^^^^^^^^^
> 3 |     body
    | ^^^^^^^^
> 4 |   }
    | ^^^^
  5 | }
  6 | catch (err) {}
  7 | 
=====================================output=====================================
try {
  if (condition) {
    body;
  }
}
catch (err) {}

================================================================================
`;

exports[`nested3.js format 1`] = `
====================================options=====================================
parsers: ["babel", "flow", "typescript"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
  1 | try {
> 2 | 1;if (condition) {
    |    ^^^^^^^^^^^^^^^
> 3 |     body
    | ^^^^^^^^
> 4 |   }
    | ^^^^
  5 | }
  6 | catch (err) {}
  7 | 
=====================================output=====================================
try {
1;if (condition) {
    body;
  }
}
catch (err) {}

================================================================================
`;

exports[`object-expression.js format 1`] = `
====================================options=====================================
parsers: ["babel", "flow", "typescript"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
> 1 | const y = {a:1, b:2}
    |            ^^^
  2 | 
=====================================output=====================================
const y = { a: 1, b: 2 };

================================================================================
`;

exports[`object-expression2.js format 1`] = `
====================================options=====================================
parsers: ["babel", "flow", "typescript"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
   3 |     {
   4 |                 a: 1,
>  5 |     },
     |       ^
>  6 |     {
     | ^^^^^
>  7 |               a: 1,
     | ^^^^^
>  8 |               b:2
     | ^^^^^
>  9 |     },
     | ^^^^^^^
  10 | ]
  11 | 
=====================================output=====================================

const y = [
  {
    a: 1,
  },
  {
    a: 1,
    b: 2,
  },
];

================================================================================
`;

exports[`range.js format 1`] = `
====================================options=====================================
parsers: ["babel", "flow", "typescript"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
  3 |     function ugly ( {a=1,     b     =   2     }      ) {
  4 |              \`multiline template string
> 5 |               with too much indentation\`
    |                    ^^^
  6 |     }
  7 |   }
  8 | }
=====================================output=====================================
function ugly ( {a=1,     b     =   2     }      ) {
  function ugly ( {a=1,     b     =   2     }      ) {
    function ugly ( {a=1,     b     =   2     }      ) {
             \`multiline template string
              with too much indentation\`;
    }
  }
}

================================================================================
`;

exports[`range-end.js format 1`] = `
====================================options=====================================
parsers: ["babel", "flow", "typescript"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
  4 | );
  5 | 
> 6 | 
    | ^
> 7 | call(
    | ^^^^^
> 8 |   1, 2,3
    | ^^^^^
> 9 | );
    | ^^^
=====================================output=====================================
// Unchanged
call(
  1, 2,3
);


call(1, 2, 3);
================================================================================
`;

exports[`range-start.js format 1`] = `
====================================options=====================================
parsers: ["babel", "flow", "typescript"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
> 1 | call(
    | ^^^^^
> 2 |   1, 2,3
    | ^^^^^^^^
> 3 | );
    | ^^^^^^^^
> 4 | 
    | ^
  5 | 
  6 | // Unchanged
  7 | call(
=====================================output=====================================
call(1, 2, 3);


// Unchanged
call(
  1, 2,3
);

================================================================================
`;

exports[`try-catch.js format 1`] = `
====================================options=====================================
parsers: ["babel", "flow", "typescript"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
  1 | try {}
> 2 | catch (err) {}
    | ^
  3 | 
=====================================output=====================================
try {
} catch (err) {}

================================================================================
`;

exports[`whitespace.js format 1`] = `
====================================options=====================================
parsers: ["babel", "flow", "typescript"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
> 1 |  
    | ^
  2 | 
=====================================output=====================================
 

================================================================================
`;
