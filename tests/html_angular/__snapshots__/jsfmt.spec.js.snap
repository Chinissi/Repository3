// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`attributes.component.html - angular-verify 1`] = `
<div
    bindon-target=" a | b : c "
    [(target)]=" a | b : c "
    bind-target=" a | b : c "
    [target]=" a | b : c "
    [target]=" 0 - 1 "
    [target]=" - 1 "
    [target]=" a ? 1 : 2 "
    [target]=" "
    [target]=" a ( 1 ) ( 2 ) "
    [target]=" a [ b ] "
    [target]=" [ 1 ] "
    [target]=" { 'a' : 1 } "
    [target]=" { a : 1 } "
    [target]=" true "
    [target]=" undefined "
    [target]=" null "
    [target]=" ( 1 ) "
    [target]=" 1 "
    [target]="  'hello' "
    [target]=" a ( 1 , 2 ) "
    [target]=" a . b ( 1 , 2 ) "
    [target]=" x ! "
    [target]=" ! x "
    [target]=" ( ( a ) ) "
    [target]=" a "
    [target]=" a // hello "
    [target]=" a . b "
    [target]=" javascript : 'hello world' "
    [target]=" a ?. b ( ) "
    [target]=" a ?. b "
    on-target=" a = 1 "
    (target)=" a = 1 "
    (target)=" a . b = 1 "
    (target)=" a [ b ] = 1 "
    (target)=" a // hello "
    (target)=" a ; b "
    *ngIf=" something?true:false    "
    *ngFor="  let     hero     of     heroes"
    *ngFor="  let    hero     of[1,2,3,666666666666666666666666666666666666]; let i=index"
    *ngFor="     let hero     of     heroes;     trackBy    :    trackByHeroes     "
    *ngFor=" let     item   of   items   ;    index    as   i  ; trackBy  :     trackByFn"
    *ngFor="  let    hero     of heroes; let i  =  index"
    *ngFor="  let    hero     of heroes; value     myValue"
    *ngIf=" condition  ;  then  thenBlock  else  elseBlock "
    *ngIf=" condition  as  value  ;  else  elseBlock "
    *directive=" let hero "
    *directive=" let hero = hello "
    *directive=" let hero of heroes "
    *directive=" let hero ; of : heroes "
    *directive=" a "
    *directive=" a as b "
    *directive=" a , b "
    *directive=" a ; b "
    *directive=" a ; b c "
    *directive=" a ; b : c "
    *directive=" a ; b : c as d "
    *directive=" a ; b as c "
></div>
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<div
  bindon-target=" a | b : c "
  [(target)]="a | b:c"
  bind-target=" a | b : c "
  [target]="a | b:c"
  [target]="0 - 1"
  [target]="-1"
  [target]="a ? 1 : 2"
  [target]=""
  [target]="a(1)(2)"
  [target]="a[b]"
  [target]="[1]"
  [target]="{ a: 1 }"
  [target]="{ a: 1 }"
  [target]="true"
  [target]="undefined"
  [target]="null"
  [target]="1"
  [target]="1"
  [target]="'hello'"
  [target]="a(1, 2)"
  [target]="a.b(1, 2)"
  [target]="x!"
  [target]="!x"
  [target]="a"
  [target]="a"
  [target]="a // hello "
  [target]="a.b"
  [target]="javascript: 'hello world' "
  [target]="a?.b()"
  [target]="a?.b"
  on-target=" a = 1 "
  (target)="(a = 1)"
  (target)="(a.b = 1)"
  (target)="(a[b] = 1)"
  (target)="a // hello "
  (target)="a; b"
  *ngIf="something ? true : false"
  *ngFor="let hero of heroes"
  *ngFor="
    let hero of [1, 2, 3, 666666666666666666666666666666666666];
    let i=index
  "
  *ngFor="let hero of heroes; trackBy: trackByHeroes"
  *ngFor="let item of items; index as i; trackBy: trackByFn"
  *ngFor="let hero of heroes; let i=index"
  *ngFor="let hero of heroes; value: myValue"
  *ngIf="condition; then: thenBlock; else: elseBlock"
  *ngIf="condition as value; else: elseBlock"
  *directive="let hero"
  *directive="let hero=hello"
  *directive="let hero of heroes"
  *directive="let hero of heroes"
  *directive="a"
  *directive="a as b"
  *directive="a; b"
  *directive="a; b"
  *directive="a; b: c"
  *directive="a; b: c"
  *directive="a; b: c as d"
  *directive="a; b as c"
></div>

`;

exports[`interpolation.component.html - angular-verify 1`] = `
<div>{{ a | b : c }}</div>
<div>{{ 0 - 1 }}</div>
<div>{{ - 1 }}</div>
<div>{{ a ? 1 : 2 }}</div>
<div>{{ a ( 1 ) ( 2 ) }}</div>
<div>{{ a [ b ] }}</div>
<div>{{ [ 1 ] }}</div>
<div>{{ { 'a' : 1 } }}</div>
<div>{{ { a : 1 } }}</div>
<div>{{ true }}</div>
<div>{{ undefined }}</div>
<div>{{ null }}</div>
<div>{{ ( 1 ) }}</div>
<div>{{ 1 }}</div>
<div>{{  'hello' }}</div>
<div>{{ a ( 1 , 2 ) }}</div>
<div>{{ a . b ( 1 , 2 ) }}</div>
<div>{{ x ! }}</div>
<div>{{ ! x }}</div>
<div>{{ ( ( a ) ) }}</div>
<div>{{ a }}</div>
<div>{{ a // hello }}</div>
<div>{{ a . b }}</div>
<div>{{ a ?. b ( ) }}</div>
<div>{{ a ?. b }}</div>
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<div>{{a | b:c}}</div>
<div>{{0 - 1}}</div>
<div>{{-1}}</div>
<div>{{a ? 1 : 2}}</div>
<div>{{a(1)(2)}}</div>
<div>{{a[b]}}</div>
<div>{{[1]}}</div>
<div>{{ { a: 1 } }}</div>
<div>{{ { a: 1 } }}</div>
<div>{{true}}</div>
<div>{{undefined}}</div>
<div>{{null}}</div>
<div>{{1}}</div>
<div>{{1}}</div>
<div>{{"hello"}}</div>
<div>{{a(1, 2)}}</div>
<div>{{a.b(1, 2)}}</div>
<div>{{x!}}</div>
<div>{{!x}}</div>
<div>{{a}}</div>
<div>{{a}}</div>
<div>{{a // hello }}</div>
<div>{{a.b}}</div>
<div>{{a?.b()}}</div>
<div>{{a?.b}}</div>

`;
