exports[`test classes.js 1`] = `
"// @flow

class Foo {
  type: \'foo\';
  foo: string;
}

class Bar {
  type: \'bar\';
  bar: string;
}

type Foobar = Foo | Bar;

function foobar(x: Foobar): string {
  if (x.type === \'foo\') {
    return foo(x);
  } else if (x.type === \'bar\') {
    return bar(x);
  } else {
    return \'unknown\';
  }
}

function foo(x: Foo): string {
  return x.foo;
}

function bar(x: Bar): string {
  return x.bar;
}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/src/printer.js:1530
      return fromString(\" | \").join(path.map(print, \"types\"));
                               ^

TypeError: fromString(...).join is not a function
    at genericPrintNoParens (/src/printer.js:1530:32)
    at genericPrint (/src/printer.js:166:7)
    at p (/src/printer.js:111:37)
    at exports.printComments (/src/comments.js:327:20)
    at printGenerically (/src/printer.js:111:12)
    at FastPath.call (/src/fast-path.js:113:16)
    at genericPrintNoParens (/src/printer.js:1481:14)
    at genericPrint (/src/printer.js:166:7)
    at p (/src/printer.js:111:37)
    at exports.printComments (/src/comments.js:327:20)
"
`;

exports[`test interfaces-neg.js 1`] = `
"/* @flow */

declare interface IDataBase {
  id: string,
  name: string,
}

declare interface IUserData extends IDataBase {
  kind: \"user\",
}

declare interface ISystemData extends IDataBase {
  kind: \"system\",
}

declare type IData = IUserData | ISystemData;

const data: IData = {
  id: \"\",
  name: \"\",
  kind: \"system\",
}

if (data.kind === \"user\") {
  (data: ISystemData);
}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/src/printer.js:1391
          fromString(\", \").join(path.map(print, \"extends\"))
                           ^

TypeError: fromString(...).join is not a function
    at genericPrintNoParens (/src/printer.js:1391:28)
    at genericPrint (/src/printer.js:166:7)
    at p (/src/printer.js:111:37)
    at exports.printComments (/src/comments.js:327:20)
    at printGenerically (/src/printer.js:111:12)
    at /src/printer.js:1601:18
    at FastPath.map (/src/fast-path.js:167:19)
    at printStatementSequence (/src/printer.js:1586:8)
    at /src/printer.js:238:16
    at FastPath.call (/src/fast-path.js:113:16)
"
`;

exports[`test interfaces-pos.js 1`] = `
"/* @flow */

declare interface IDataBase {
  id: string,
  name: string,
}

declare interface IUserData extends IDataBase {
  kind: \"user\",
}

declare interface ISystemData extends IDataBase {
  kind: \"system\",
}

declare type IData = IUserData | ISystemData;

const data: IData = {
  id: \"\",
  name: \"\",
  kind: \"system\",
}

if (data.kind === \"system\") {
  (data: ISystemData);
}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/src/printer.js:1391
          fromString(\", \").join(path.map(print, \"extends\"))
                           ^

TypeError: fromString(...).join is not a function
    at genericPrintNoParens (/src/printer.js:1391:28)
    at genericPrint (/src/printer.js:166:7)
    at p (/src/printer.js:111:37)
    at exports.printComments (/src/comments.js:327:20)
    at printGenerically (/src/printer.js:111:12)
    at /src/printer.js:1601:18
    at FastPath.map (/src/fast-path.js:167:19)
    at printStatementSequence (/src/printer.js:1586:8)
    at /src/printer.js:238:16
    at FastPath.call (/src/fast-path.js:113:16)
"
`;

exports[`test type-decls-neg.js 1`] = `
"/* @flow */

type DataBase = {
  id: string,
  name: string,
};

type UserData = {
  id: string,
  name: string,
  kind: \"user\",
}

type SystemData = {
  id: string,
  name: string,
  kind: \"system\",
}

declare type Data = UserData | SystemData;

const data: Data = {
  id: \"\",
  name: \"\",
  kind: \"system\",
}

if (data.kind === \"user\") {
  (data: SystemData);
}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/src/printer.js:1530
      return fromString(\" | \").join(path.map(print, \"types\"));
                               ^

TypeError: fromString(...).join is not a function
    at genericPrintNoParens (/src/printer.js:1530:32)
    at genericPrint (/src/printer.js:166:7)
    at p (/src/printer.js:111:37)
    at exports.printComments (/src/comments.js:327:20)
    at printGenerically (/src/printer.js:111:12)
    at FastPath.call (/src/fast-path.js:113:16)
    at genericPrintNoParens (/src/printer.js:1481:14)
    at genericPrint (/src/printer.js:166:7)
    at p (/src/printer.js:111:37)
    at exports.printComments (/src/comments.js:327:20)
"
`;

exports[`test type-decls-pos.js 1`] = `
"/* @flow */

type DataBase = {
  id: string,
  name: string,
};

type UserData = {
  id: string,
  name: string,
  kind: \"user\",
}

type SystemData = {
  id: string,
  name: string,
  kind: \"system\",
}

declare type Data = UserData | SystemData;

const data: Data = {
  id: \"\",
  name: \"\",
  kind: \"system\",
}

if (data.kind === \"system\") {
  (data: SystemData);
}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/src/printer.js:1530
      return fromString(\" | \").join(path.map(print, \"types\"));
                               ^

TypeError: fromString(...).join is not a function
    at genericPrintNoParens (/src/printer.js:1530:32)
    at genericPrint (/src/printer.js:166:7)
    at p (/src/printer.js:111:37)
    at exports.printComments (/src/comments.js:327:20)
    at printGenerically (/src/printer.js:111:12)
    at FastPath.call (/src/fast-path.js:113:16)
    at genericPrintNoParens (/src/printer.js:1481:14)
    at genericPrint (/src/printer.js:166:7)
    at p (/src/printer.js:111:37)
    at exports.printComments (/src/comments.js:327:20)
"
`;
