exports[`test lex.js 1`] = `
"function switch_scope(x: mixed) {
  let a = \"\";
  let b = \"\";
  switch (x) {
    case \"foo\":
      let a;
      a = 0; // doesn\'t add lower bound to outer a
      b = 0;
  }
  (a : string); // OK
  (b : string); // error: number ~> string
}

function try_scope_finally() {
  let a;
  let b;
  try {
    a = \"\";
    b = \"\";
  } finally {
    let a;
    a = 0; // doesn\'t add lower bound to outer a
    b = 0;
  }
  (a : string); // ok
  (b : string); // error: number ~> string
}

function for_scope() {
  let a = \"\";
  let b = \"\";
  for (let a;;) {
    a = 0; // doesn\'t add lower bound to outer a
    b = 0;
  }
  (a : string);
  (b : string); // error: number ~> string
}

function for_in_scope(o: Object) {
  let a = 0;
  let b = 0;
  for (let a in o) {
    a = \"\"; // doesn\'t add lower bound to outer a
    b = \"\";
  }
  (a : number);
  (b : number); // error: string ~> number
}

function for_of_scope(xs: number[]) {
  let a = \"\";
  let b = \"\";
  for (let a of xs) {
    a = 0; // doesn\'t add lower bound to outer a
    b = 0;
  }
  (a : string);
  (b : string); // error: number ~> string
}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/src/printer.js:1020
        }, \"consequent\").indent(options.tabWidth));
                         ^

TypeError: path.call(...).indent is not a function
    at genericPrintNoParens (/src/printer.js:1020:26)
    at genericPrint (/src/printer.js:166:7)
    at p (/src/printer.js:111:37)
    at exports.printComments (/src/comments.js:327:20)
    at printGenerically (/src/printer.js:111:12)
    at FastPath.map (/src/fast-path.js:167:19)
    at genericPrintNoParens (/src/printer.js:1005:36)
    at genericPrint (/src/printer.js:166:7)
    at p (/src/printer.js:111:37)
    at exports.printComments (/src/comments.js:327:20)
"
`;

exports[`test locals.js 1`] = `
"var x:string = 0;
var x:number = 1;

//declare var T: $Type<number | Array<T>>;

function foo(p: bool) {}

function sorry(really: bool) {
    if (really) {
        var x: number | string = 1337;
    } else {
        var x: bool = true;
    }
    foo(x);
}

function foo0(b: bool): number {
  var x = 0;
  if (b) {
    var x = \"\"; // error: string ~> number
  }
  return x;
}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/src/printer.js:1530
      return fromString(\" | \").join(path.map(print, \"types\"));
                               ^

TypeError: fromString(...).join is not a function
    at genericPrintNoParens (/src/printer.js:1530:32)
    at genericPrint (/src/printer.js:166:7)
    at p (/src/printer.js:111:37)
    at exports.printComments (/src/comments.js:327:20)
    at printGenerically (/src/printer.js:111:12)
    at FastPath.call (/src/fast-path.js:113:16)
    at genericPrintNoParens (/src/printer.js:1254:25)
    at genericPrint (/src/printer.js:166:7)
    at p (/src/printer.js:111:37)
    at exports.printComments (/src/comments.js:327:20)
"
`;
